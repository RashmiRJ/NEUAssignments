/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.TravelAgency;

import Business.TravelAgency.Booking;
import Business.TravelAgency.BookingDirectory;
import Business.Flights.Flight;
import Business.Flights.FlightDirectory;
import Business.Customer.Passenger;
import Business.TravelAgency.Seat;
import Business.TravelAgency.SeatDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shriya22
 */
public class ManageBookingsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageBookingsPanel
     */
    private JPanel rightPanel;
    private BookingDirectory bookDir;
    private FlightDirectory fltDir;
    private Flight flight;
    private double TotalCost;
    private Passenger passenger;
    private Booking booking;
    private SeatDirectory seatDir;
    private ArrayList<Seat> seatList;
    private Seat seat;

    public ManageBookingsPanel(JPanel rightPanel, BookingDirectory bookDir, FlightDirectory fltDir, Booking booking) {//, SeatDirectory seatDir ,  ArrayList<Seat> seatList ) {
        initComponents();
        this.bookDir = bookDir;
        this.fltDir = fltDir;
        this.rightPanel = rightPanel;
        this.flight = flight;
        this.passenger = passenger;
        this.booking = booking;
        this.seatDir = seatDir;
        this.seatList = seatList;
        this.seat = seat;
        this.TotalCost = 0.0;
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.agent
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBooking = new javax.swing.JTable();
        btnSearchBkRef = new javax.swing.JButton();
        txtSearchBkRef = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("ManageBookingsPanel");

        tblBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking Reference", "Source", "Destination", "Number of Travellers", "Total Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBooking);

        btnSearchBkRef.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearchBkRef.setText("Search by Booking Reference:");
        btnSearchBkRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBkRefActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelete.setText("Cancel Booking");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnView.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnView.setText("View Booking");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setText("Update Booking");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(333, 333, 333)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(232, 232, 232)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSearchBkRef)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearchBkRef, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDelete)
                                .addGap(28, 28, 28)
                                .addComponent(btnView)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)))))
                .addContainerGap(292, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchBkRef)
                    .addComponent(txtSearchBkRef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(411, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populate() {
        DefaultTableModel dtm = (DefaultTableModel) tblBooking.getModel();
        dtm.setRowCount(0);

        for (Booking b : bookDir.getBookingList()) {
            TotalCost = b.getSeatCost() * b.getPassengerNumber();
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = b;
            row[1] = b.getSource();
            row[2] = b.getDestination();
            row[3] = b.getPassengerNumber();
            row[4] = TotalCost;

            dtm.addRow(row);
        }
    }

    public void populate(ArrayList<Booking> bookingList) {
        DefaultTableModel dtm = (DefaultTableModel) tblBooking.getModel();
        dtm.setRowCount(0);

        for (Booking b : bookingList) {
            TotalCost = b.getSeatCost() * b.getPassengerNumber();
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = b;
            row[1] = b.getSource();
            row[2] = b.getDestination();
            row[3] = b.getPassengerNumber();
            row[4] = TotalCost;

            dtm.addRow(row);
        }
    }
    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int selectedRow = tblBooking.getSelectedRow();
        if (selectedRow >= 0) {
            Booking booking = (Booking) tblBooking.getValueAt(selectedRow, 0);
            ViewBookingJPanel view = new ViewBookingJPanel(rightPanel, booking, bookDir, passenger, seat);
            rightPanel.add("ViewAccountJPanel", view);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSearchBkRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBkRefActionPerformed
        // TODO add your handling code here:
        
        try {
       Integer.parseInt(txtSearchBkRef.getText());
       // if (result == null) {
            
        } catch (NumberFormatException e) {
        
        JOptionPane.showMessageDialog(null, "Please enter a valid booking reference", "Information", JOptionPane.INFORMATION_MESSAGE);
            txtSearchBkRef.setBorder(BorderFactory.createLineBorder(Color.RED));
            return;
        }
        
        
        Booking result = bookDir.searchBooking(Integer.parseInt(txtSearchBkRef.getText()));
        if(result == null) {
             JOptionPane.showMessageDialog(null, "Please enter a valid booking reference", "Information", JOptionPane.INFORMATION_MESSAGE);
            txtSearchBkRef.setBorder(BorderFactory.createLineBorder(Color.RED));
        }else {
                    ViewBookingJPanel view = new ViewBookingJPanel(rightPanel, result, bookDir, passenger, seat);
            rightPanel.add("ViewBookingJPanel", view);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);}
    }//GEN-LAST:event_btnSearchBkRefActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblBooking.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete airliner??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Booking booking = (Booking) tblBooking.getValueAt(selectedRow, 0);
                bookDir.getBookingList().remove(booking);
                populate();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Airliner");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblBooking.getSelectedRow();
        if (selectedRow >= 0) {
            Booking booking = (Booking) tblBooking.getValueAt(selectedRow, 0);
            UpdateBookingPanel view = new UpdateBookingPanel(rightPanel, booking, bookDir, passenger, fltDir, flight);
            rightPanel.add("UpdateBookingPanel", view);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearchBkRef;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBooking;
    private javax.swing.JTextField txtSearchBkRef;
    // End of variables declaration//GEN-END:variables

}

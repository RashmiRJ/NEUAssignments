/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Airliner;

import Business.Airline.Airliner;
import javax.swing.JPanel;
import Business.Airline.AirlinerDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rashmirj
 */
public class ManageAirlinerPanel extends javax.swing.JPanel {

    private JPanel rightPanel;
    private AirlinerDirectory alnDir;
    private Airliner alr;

    /**
     * Creates new form ManageAirlinerPanel
     */
    public ManageAirlinerPanel(JPanel rightPanel, AirlinerDirectory alnDir) {
        initComponents();
        this.alnDir = alnDir;
        this.rightPanel = rightPanel;
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAirlinerDirectory = new javax.swing.JTable();
        btnDel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1365, 750));

        tblAirlinerDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "City", "State", "Country", "Zip", "No. Of Airplanes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAirlinerDirectory);

        btnDel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDel.setText("Delete Airliner");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setText("View/Update Airliner");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCreate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCreate.setText("Create Airliner");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Manage Airliner");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(439, 439, 439)
                        .addComponent(btnDel)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(34, 34, 34)
                        .addComponent(btnCreate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(69, 69, 69)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDel)
                    .addComponent(btnUpdate)
                    .addComponent(btnCreate))
                .addGap(161, 161, 161))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) tblAirlinerDirectory.getModel();
        dtm.setRowCount(0);

        for (Airliner a : alnDir.getAirlinerList()) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = a;
            row[1] = a.getAlrAddress();
            row[2] = a.getAlrCity();
            row[3] = a.getAlrState();
            row[4] = a.getAlrCountry();
            row[5] = a.getAlrZipCode();
            row[6] = a.getAlrAirplaneCount();
            dtm.addRow(row);
        }
    }

    public void populate(ArrayList<Airliner> p) {
        DefaultTableModel dtm = (DefaultTableModel) tblAirlinerDirectory.getModel();
        dtm.setRowCount(0);

        for (Airliner a : p) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = a;
            row[1] = a.getAlrAddress();
            row[2] = a.getAlrCity();
            row[3] = a.getAlrState();
            row[4] = a.getAlrCountry();
            row[5] = a.getAlrZipCode();
            row[6] = a.getAlrAirplaneCount();
            dtm.addRow(row);
        }
    }

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        CreateAirlinerPanel createAlrPanel = new CreateAirlinerPanel(rightPanel, alnDir);
        rightPanel.add("createAirlinerPanel", createAlrPanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = tblAirlinerDirectory.getSelectedRow();
        if (selectedRow >= 0) {
            Airliner a = (Airliner) tblAirlinerDirectory.getValueAt(selectedRow, 0);
            UpdateAirlinerPanel updateAlrPanel = new UpdateAirlinerPanel(this.rightPanel, a, alnDir.getAirlinerList());
            rightPanel.add("updateAlrPanel", updateAlrPanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAirlinerDirectory.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete airliner??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Airliner airliner = (Airliner) tblAirlinerDirectory.getValueAt(selectedRow, 0);
                alnDir.getAirlinerList().remove(airliner);
                populate();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Airliner");
        }
    }//GEN-LAST:event_btnDelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAirlinerDirectory;
    // End of variables declaration//GEN-END:variables
}

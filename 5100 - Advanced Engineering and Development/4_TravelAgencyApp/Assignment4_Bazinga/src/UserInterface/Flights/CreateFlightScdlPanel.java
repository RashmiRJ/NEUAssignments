/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Flights;
//simple commit

import Business.Airline.Airliner;
import Business.Airline.AirlinerDirectory;
import Business.Airline.Airplane;
import Business.Flights.Flight;
import Business.Flights.FlightDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author rashmirj
 */
public class CreateFlightScdlPanel extends javax.swing.JPanel {

    private JPanel rightPanel;
    private FlightDirectory fltDir;
    private AirlinerDirectory alnDir;
    private SimpleDateFormat sf;
    private Date d;

    /**
     * Creates new form CreateFlightScdlPanel
     */
    public CreateFlightScdlPanel(JPanel rightPanel, FlightDirectory fltDir, AirlinerDirectory alnDir) {
        initComponents();
        this.fltDir = fltDir;
        this.rightPanel = rightPanel;
        this.alnDir = alnDir;
        this.sf = new SimpleDateFormat("yyyy-MM-dd");
        this.d = new Date();
        populateAirlinerDD();
    }

    private void populateAirlinerDD() {
        ArrayList<Airliner> airliners = alnDir.getAirlinerList();
        for (Airliner alr : airliners) {
            jcAirliner.addItem(alr.getAlrName());

        }
    }

    private void poplateAirplaneDD(String selectedAlrName) {
        ArrayList<Airliner> airliners = alnDir.getAirlinerList();
        ArrayList<Airplane> alps = new ArrayList<>();
        Boolean flag = false;
        for (Airliner alr : airliners) {
            if (selectedAlrName.equals(alr.getAlrName())) {
                alps = alr.getAlrPlanes();
                flag = true;
                break;
            }
        }
        if (flag == true) {
            jcAirplane.removeAllItems();
            for (Airplane alp : alps) {
                jcAirplane.addItem(String.valueOf(alp.getAlnNumber()));

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcAirliner = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtFlNumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFromLocation = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtToLocation = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcFlightTime = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jcAirplane = new javax.swing.JComboBox<>();
        btnCreate = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Create Flight Schedule");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Airliner:");

        jcAirliner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcAirlinerActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Flight Number:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("From Location:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("To Location:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Flight time:");

        jcFlightTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Morning", "Noon", "Evening", "Night" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Seat Cost:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Fight Date:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Airplane:");

        btnCreate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnBack1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtFromLocation))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jcAirplane, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 2, Short.MAX_VALUE))
                                        .addComponent(txtFlNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtToLocation)
                                    .addComponent(jcFlightTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCost)
                                    .addComponent(txtDate))))
                        .addGap(385, 385, 385))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack1)
                        .addGap(183, 183, 183)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCreate)
                        .addGap(101, 101, 101))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jcAirplane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFlNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFromLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtToLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jcFlightTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 381, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(60, 60, 60))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcAirlinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcAirlinerActionPerformed
        if (jcAirliner.getItemCount() > 0) {
            poplateAirplaneDD(String.valueOf(jcAirliner.getSelectedItem()));
        }

    }//GEN-LAST:event_jcAirlinerActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);

        Component[] comps = this.rightPanel.getComponents();
        for (Component comp : comps) {
            if (comp instanceof ManageFlightsPanel) {
                ManageFlightsPanel manageFlPanel = (ManageFlightsPanel) comp;
                manageFlPanel.populate(fltDir.getFlightList());
            }
        }

    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        //Date currDate = sf.format(new Date());
        String flNumber = txtFlNumber.getText();
        try {
            Integer.parseInt(flNumber);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter number for Flight Number");
            txtFlNumber.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel3.setForeground(Color.red);
            return;
        }

        String fromLoc = txtFromLocation.getText();
        if (fromLoc == null || fromLoc.equals("")) {
            JOptionPane.showMessageDialog(null, "From Location can't be empty");
            txtFromLocation.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel4.setForeground(Color.red);
            return;
        } else if (!fromLoc.matches("^[a-zA-Z_ ]*$")) {
            JOptionPane.showMessageDialog(null, "From Location must contain only alphabets");
            txtFromLocation.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel4.setForeground(Color.red);
            return;
        }

        String toLoc = txtToLocation.getText();
        if (toLoc == null || toLoc.equals("")) {
            JOptionPane.showMessageDialog(null, "To Location can't be empty");
            txtToLocation.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel5.setForeground(Color.red);
            return;
        } else if (!toLoc.matches("^[a-zA-Z_ ]*$")) {
            JOptionPane.showMessageDialog(null, "To Location must contain only alphabets");
            txtToLocation.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel5.setForeground(Color.red);
            return;
        }

        String cost = txtCost.getText();
        try {
            Double.parseDouble(cost);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter number for Cost");
            txtCost.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel7.setForeground(Color.red);
            return;
        }

        String flDate = txtDate.getText();
        if (flDate == null || flDate.equals("")) {
            JOptionPane.showMessageDialog(null, "Date can't be empty");
            txtDate.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel8.setForeground(Color.red);
            return;
        }
        Date chosenDate = null;
        try {
            chosenDate = sf.parse(txtDate.getText());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Please enter date in YYYY-MM-DD format");
            txtDate.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel8.setForeground(Color.red);
            return;

        }

        if (chosenDate.before(d)) {
            JOptionPane.showMessageDialog(null, "Date cannot be before current date");
            txtDate.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel8.setForeground(Color.red);
            return;
        }

        txtFlNumber.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        jLabel3.setForeground(Color.BLACK);
        txtDate.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        jLabel8.setForeground(Color.BLACK);
        txtCost.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        jLabel7.setForeground(Color.BLACK);
        txtToLocation.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        jLabel5.setForeground(Color.BLACK);
        txtFromLocation.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        jLabel4.setForeground(Color.BLACK);

        Flight flt = fltDir.addFlight();
        flt.setFlAirlinerName(String.valueOf(jcAirliner.getSelectedItem()));
        flt.setFlCost(Double.parseDouble(txtCost.getText()));
        flt.setFlDate(chosenDate);
        flt.setFlFlyingTime(String.valueOf(jcFlightTime.getSelectedItem()));
        flt.setFlFromLoc(txtFromLocation.getText());
        flt.setFlToLoc(txtToLocation.getText());
        flt.setAlpNumber(Integer.parseInt(String.valueOf(jcAirplane.getSelectedItem())));

        JOptionPane.showMessageDialog(null, "Created Flight Schedule Successfully");

        txtCost.setText("");
        txtDate.setText("");
        txtFlNumber.setText("");
        txtFromLocation.setText("");
        txtToLocation.setText("");
        jcFlightTime.setSelectedIndex(0);


    }//GEN-LAST:event_btnCreateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JComboBox<String> jcAirliner;
    private javax.swing.JComboBox<String> jcAirplane;
    private javax.swing.JComboBox<String> jcFlightTime;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFlNumber;
    private javax.swing.JTextField txtFromLocation;
    private javax.swing.JTextField txtToLocation;
    // End of variables declaration//GEN-END:variables
}

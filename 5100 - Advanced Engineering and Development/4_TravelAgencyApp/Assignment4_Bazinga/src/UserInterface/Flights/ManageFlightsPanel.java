/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Flights;

import Business.Airline.AirlinerDirectory;
import Business.Flights.Flight;
import Business.Flights.FlightDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rashmirj
 */
public class ManageFlightsPanel extends javax.swing.JPanel {

    private JPanel rightPanel;
    private FlightDirectory fltDir;
    private AirlinerDirectory alnDir;

    /**
     * Creates new form ManageFlights
     */
    public ManageFlightsPanel(JPanel rightPanel, FlightDirectory fltDir, AirlinerDirectory alnDir) {
        initComponents();
        this.fltDir = fltDir;
        this.alnDir = alnDir;
        this.rightPanel = rightPanel;
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFlightScdl = new javax.swing.JTable();
        btnDelFlight = new javax.swing.JButton();
        btnUpdFlight = new javax.swing.JButton();
        btnCreateFlight = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Manage Flights");

        tblFlightScdl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner", "Flight Number", "From Location", "To Location", "Departure Date", "Time of flight", "Capacity", "Cost", "Airplane"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFlightScdl);

        btnDelFlight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelFlight.setText("Delete");
        btnDelFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelFlightActionPerformed(evt);
            }
        });

        btnUpdFlight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdFlight.setText("Update/View Flight");
        btnUpdFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdFlightActionPerformed(evt);
            }
        });

        btnCreateFlight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCreateFlight.setText("Create New Flight");
        btnCreateFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDelFlight)
                .addGap(18, 18, 18)
                .addComponent(btnUpdFlight)
                .addGap(28, 28, 28)
                .addComponent(btnCreateFlight)
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(jLabel1)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelFlight)
                    .addComponent(btnUpdFlight)
                    .addComponent(btnCreateFlight))
                .addContainerGap(283, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateFlightActionPerformed
        CreateFlightScdlPanel createFlPanel = new CreateFlightScdlPanel(rightPanel, fltDir, alnDir);
        rightPanel.add("createFlightScdlPanel", createFlPanel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
    }//GEN-LAST:event_btnCreateFlightActionPerformed

    private void btnDelFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelFlightActionPerformed
        int selectedRow = tblFlightScdl.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete Flight Schedule??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Flight fl = (Flight) tblFlightScdl.getValueAt(selectedRow, 0);
                fltDir.getFlightList().remove(fl);
                populate();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Flight Schedule");
        }
    }//GEN-LAST:event_btnDelFlightActionPerformed

    private void btnUpdFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdFlightActionPerformed
        int selectedRow = tblFlightScdl.getSelectedRow();
        if (selectedRow >= 0) {
            Flight fl = (Flight) tblFlightScdl.getValueAt(selectedRow, 0);
            UpdateFlightScdlPanel updatePanel = new UpdateFlightScdlPanel(rightPanel, fltDir, alnDir, fl);
            rightPanel.add("updateAlrPanel", updatePanel);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row!");
        }
    }//GEN-LAST:event_btnUpdFlightActionPerformed

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) tblFlightScdl.getModel();
        dtm.setRowCount(0);

        for (Flight f : fltDir.getFlightList()) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = f;
            row[1] = String.valueOf(f.getFlNumber());
            row[2] = f.getFlFromLoc();
            row[3] = f.getFlToLoc();
            row[4] = String.valueOf(f.getFlDate());
            row[5] = f.getFlFlyingTime();
            row[6] = String.valueOf(f.getFltCapacity());
            row[7] = String.valueOf(f.getFlCost());
            row[8] = String.valueOf(f.getAlpNumber());
            dtm.addRow(row);
        }
    }

    public void populate(ArrayList<Flight> fList) {
        DefaultTableModel dtm = (DefaultTableModel) tblFlightScdl.getModel();
        dtm.setRowCount(0);

        for (Flight f : fList) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = f;
            row[1] = String.valueOf(f.getFlNumber());
            row[2] = f.getFlFromLoc();
            row[3] = f.getFlToLoc();
            row[4] = String.valueOf(f.getFlDate());
            row[5] = f.getFlFlyingTime();
            row[6] = String.valueOf(f.getFltCapacity());
            row[7] = String.valueOf(f.getFlCost());
            row[8] = String.valueOf(f.getAlpNumber());
            dtm.addRow(row);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateFlight;
    private javax.swing.JButton btnDelFlight;
    private javax.swing.JButton btnUpdFlight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFlightScdl;
    // End of variables declaration//GEN-END:variables
}
